# JavaScript rules


Comments = [[//, ], [/*, */]]


Identifiers {
    Filename {
        value: ||NAMEOFFILEONLY||
    }
    Complete filename {
        value: ||NAMEOFFILE||
        hidden
    }
    Describe {
        # describe('TestDescription', function() {})
        pattern: "describe\(['\"]([A-Za-z0-9* ]+)['\"]"
    }
    Class {
        # class ClassName
        pattern: "class\s+([A-Za-z0-9_]+)"
    }
    Provide {
        # provide('ServiceName');
        pattern: "provide\(['\"]([A-Za-z][A-Za-z0-9*\-\. ]* ?)['\"]\);"
    }
}

Dependencies {
    Import {
        # import { ComponentName } from 'module-name'
        pattern: "import\s*(?:\{\s*[A-Za-z0-9_]+(?:\s*,\s*[A-Za-z0-9_]+)*\s*\}|[A-Za-z][A-Za-z0-9*]*)\sfrom\s*['\"](?:\.{1,2}\/)*(?:.*\/)*([A-Za-z][A-Za-z0-9*\-\. ]* ?)(?:\.[A-Za-z0-9]+)?['\"]\s*;?"
    }
    Require {
        # const lib = require('module-name').default;
        pattern: "require\(['\"](?:\w+\.){0,}([^.]+)['\"]\);"
    }
    Require {
        # const ModuleName = require('module-name');
        pattern: "require\(['\"]([A-Za-z][A-Za-z0-9*\-\. ]* ?)['\"]\);"
    }
    Extends {
        # class ChildClass extends ParentClass
        pattern: "extends\s+([A-Za-z0-9_]+)"
        condition: Import
    }
    Extends {
        # class ChildClass extends ParentClass
        pattern: "extends\s+([A-Za-z0-9_]+)"
        condition: Require
    }
}